{"version":3,"sources":["images/like.svg","images/dislike.svg","images sync /^/.//.*$","images/anonymous.jpg","components/Heading/Heading.js","components/LoginForm/LoginForm.js","store/actions/login.js","store/actions/actionTypes.js","Helpers/Helpers.js","containers/Login/Login.js","containers/Layout/Layout.js","components/Header/Header.js","components/UserComment/Comment/Likes/Likes.js","components/UserComment/Comment/Dislikes/Dislikes.js","components/UserComment/Comment/Reply/Replies/Replies.js","components/UserComment/Comment/Reply/Reply.js","components/UserComment/Comment/Comment.js","components/UserComment/UserComment.js","components/AddComment/AddComment.js","components/Pagination/Pagination.js","components/Body/Body.js","containers/Home/Home.js","App.js","serviceWorker.js","store/utility.js","store/reducer/login.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./anonymous.jpg","./dislike.svg","./like.svg","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","Heading","props","react_default","a","createElement","Fragment","className","concat","isAuthenticated","heading","LoginForm","onSubmit","event","loginSubmitHandler","onBlur","formValidate","type","name","onChange","inputChangeHandler","value","email","placeholder","autoComplete","isEmailValid","password","isPasswordValid","loginSuccess","loginFail","validateEmail","trim","test","validatePassword","data","user_id","Math","random","user","image_url","comments","text","time","like","dislike","reply","replyText","Login","state","redirectToHome","_this$setState","element","target","_this","setState","defineProperty","isLoginFailed","onResetLoginFailFlag","preventDefault","onLogin","prevProps","this","react_router","to","_this2","components_Heading_Heading","components_LoginForm_LoginForm","Component","connect","login","dispatch","actionCreators","Layout","containers_Login_Login","Header","header","onClick","onLogout","Likes","src","likeIcon","likeOrDislikeComment","item","alt","Dislikes","dislikeIcon","Replies","replies","index","key","Reply","_useState","useState","_useState2","slicedToArray","isReply","setReplyFlag","style","fontSize","cursor","length","Reply_Replies_Replies","resize","replyHandler","addReply","Comment","Comment_Likes_Likes","userId","parameter","Comment_Dislikes_Dislikes","Comment_Reply_Reply","UserComment","userComment","commentsData","require","UserComment_Comment_Comment","AddComment","rows","commentChangeHandler","commentText","addComment","Pagination","console","log","pageNumber","aria-label","paginatePreviousData","aria-hidden","number","limit","paginateData","paginateNextData","Body","setCommentsData","_useState3","_useState4","setCommentText","_useState5","_useState6","pageNumberArray","setPageNumberArray","_useState7","_useState8","setLimit","_useState9","_useState10","skip","setSkip","_useState11","_useState12","setPageNumber","_useState13","_useState14","setReplyText","useEffect","commentDataLength","paginationArray","i","push","components_Header_Header","components_UserComment_UserComment","slice","updatedCommentsData","JSON","parse","stringify","commentIndex","findIndex","userIndex","alert","components_Pagination_Pagination","components_AddComment_AddComment","userData","updatedPageNumberArray","Home","redirectToLogin","components_Body_Body","App","path","exact","component","Boolean","window","location","hostname","match","updateObject","oldObject","updatedProperties","objectSpread","initialState","localStorage","getItem","arguments","undefined","action","setItem","removeItem","logout","resetLoginFailFlag","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","app","es","react_router_dom","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gLCAxC,IAAAC,EAAA,CACAC,kBAAA,GACAC,gBAAA,GACAC,aAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAP,EAAAQ,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAN,EAAAK,GACA,KAAAC,EAAA,IACA,IAAAE,EAAA,IAAAC,MAAA,uBAAAJ,EAAA,KAEA,MADAG,EAAAE,KAAA,mBACAF,EAEA,OAAAF,EAEAF,EAAAO,KAAA,WACA,OAAAC,OAAAD,KAAAX,IAEAI,EAAAS,QAAAN,EACAX,EAAAC,QAAAO,EACAA,EAAAE,GAAA,uBCzBAV,EAAAC,QAAiBC,EAAAC,EAAuB,mPCYzBe,EAVC,SAACC,GACb,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,MAAIE,UAAS,WAAAC,OAAaN,EAAMO,gBAAkB,YAAc,QAAnD,iBACRP,EAAMQ,WC0BRC,SA7BG,SAACT,GACf,OACIC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,kBACZK,SAAU,SAACC,GAAD,OAAWX,EAAMY,mBAAmBD,IAC9CE,OAAQ,SAACF,GAAD,OAAWX,EAAMc,aAAaH,KACtCV,EAAAC,EAAAC,cAAA,SACIY,KAAK,OACLV,UAAU,eACVW,KAAK,QACLC,SAAU,SAACN,GAAD,OAAWX,EAAMkB,mBAAmBP,IAC9CQ,MAAOnB,EAAMoB,MACbC,YAAY,SACZC,aAAa,SACftB,EAAMuB,cAAgBtB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oCAAb,qBACxBJ,EAAAC,EAAAC,cAAA,SACIY,KAAK,WACLV,UAAU,oBACVY,SAAU,SAACN,GAAD,OAAWX,EAAMkB,mBAAmBP,IAC9CQ,MAAOnB,EAAMwB,SACbR,KAAK,WACLK,YAAY,eACdrB,EAAMyB,iBAAmBxB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oCAAb,wBAC3BJ,EAAAC,EAAAC,cAAA,UAAQY,KAAK,QAAQV,UAAU,oCAA/B,aChBHqB,EAAe,iBAAO,CAC/BX,KCNyB,kBDShBY,EAAY,iBAAO,CAC5BZ,KCTsB,eCLba,SAAgB,SAACR,GAC1B,IAAIG,GAAe,EAKnB,MAHqB,KAAjBH,EAAMS,QADE,0IACqBC,KAAKV,KAClCG,GAAe,GAEZA,IAGEQ,EAAmB,SAACP,GAC7B,IAAIC,GAAkB,EAKtB,MAHwB,KAApBD,EAASK,QADD,8CACwBC,KAAKN,KACrCC,GAAkB,GAEfA,GAGEO,EAAO,CAChB,CACIC,QAASC,KAAKC,OAAO,IACrBC,KAAM,CACFpB,KAAM,cACNqB,UAAW,iBAEfC,SAAU,CACNC,KAAM,eACNC,KAAM,eACNC,KAAM,EACNC,QAAS,EACTC,MAAO,CAAC,CACJ3B,KAAM,OACN4B,UAAW,0BAEf,CACI5B,KAAM,QACN4B,UAAW,eAIvB,CACIX,QAASC,KAAKC,OAAO,IACrBC,KAAM,CACFpB,KAAM,cACNqB,UAAW,iBAEfC,SAAU,CACNC,KAAM,eACNC,KAAM,eACNC,KAAM,EACNC,QAAS,EACTC,MAAO,CAAC,CACJ3B,KAAM,OACN4B,UAAW,eAIvB,CACIX,QAASC,KAAKC,OAAO,IACrBC,KAAM,CACFpB,KAAM,cACNqB,UAAW,iBAEfC,SAAU,CACNC,KAAM,eACNC,KAAM,eACNC,KAAM,EACNC,QAAS,EACTC,MAAO,MC5DbE,6MAEFC,MAAQ,CACJ1B,MAAO,GACPI,SAAU,GACVD,cAAc,EACdE,iBAAiB,EACjBsB,eAAgB,QAapB7B,mBAAqB,SAACP,GAAU,IAAAqC,EACtBC,EAAUtC,EAAMuC,OAAOlC,KAC7BmC,EAAKC,UAALJ,EAAA,GAAAnD,OAAAwD,EAAA,EAAAxD,CAAAmD,EACKrC,EAAMuC,OAAOlC,KAAOL,EAAMuC,OAAO/B,OADtCtB,OAAAwD,EAAA,EAAAxD,CAAAmD,EAAA,eAE8B,UAAZC,EAAsBrB,EAAcjB,EAAMuC,OAAO/B,OAASgC,EAAKL,MAAMvB,cAFvF1B,OAAAwD,EAAA,EAAAxD,CAAAmD,EAAA,kBAGiC,aAAZC,EAAyBlB,EAAiBpB,EAAMuC,OAAO/B,OAASgC,EAAKL,MAAMrB,iBAHhGuB,IAMAG,EAAKnD,MAAMsD,eAAiBH,EAAKnD,MAAMuD,0BAG3CzC,aAAe,SAACH,GACZ,IAAMsC,EAAUtC,EAAMuC,OAAOlC,KAC7BmC,EAAKC,SAAS,CACV7B,aAA0B,UAAZ0B,EAAsBrB,EAAcjB,EAAMuC,OAAO/B,OAASgC,EAAKL,MAAMvB,aACnFE,gBAA6B,aAAZwB,EAAyBlB,EAAiBpB,EAAMuC,OAAO/B,OAASgC,EAAKL,MAAMrB,qBAIpGb,mBAAqB,SAACD,GAClBA,EAAM6C,iBACN,IAAIpC,EAAQ+B,EAAKL,MAAM1B,MACnBI,EAAW2B,EAAKL,MAAMtB,SAEtBI,EAAcuB,EAAKL,MAAM1B,QAAUW,EAAiBoB,EAAKL,MAAMtB,WAC/D2B,EAAKnD,MAAMyD,QAAQN,EAAKL,MAAM1B,MAAO+B,EAAKL,MAAMtB,UAGpD2B,EAAKC,SAAS,CACVhC,QACAI,WACAD,aAAcK,EAAcuB,EAAKL,MAAM1B,OACvCK,gBAAiBM,EAAiBoB,EAAKL,MAAMtB,+FA1ClCkC,GACXC,KAAK3D,MAAMO,iBACXoD,KAAKP,SAAS,CACVhC,MAAO,GACPI,SAAU,GACVuB,eAAgB9C,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUC,GAAG,6CAyChC,IAAAC,EAAAH,KACL,OACI1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wCACVsD,KAAKb,MAAMC,eACZ9C,EAAAC,EAAAC,cAAC4D,EAAD,CAASvD,QAAQ,UACjBP,EAAAC,EAAAC,cAAC6D,EAAD,CACI9C,mBAAoB,SAACP,GAAD,OAAWmD,EAAK5C,mBAAmBP,IACvDC,mBAAoB,SAACD,GAAD,OAAWmD,EAAKlD,mBAAmBD,IACvDG,aAAc,SAACH,GAAD,OAAWmD,EAAKhD,aAAaH,IAC3CY,aAAcoC,KAAKb,MAAMvB,aACzBE,gBAAiBkC,KAAKb,MAAMrB,gBAC5BL,MAAOuC,KAAKb,MAAM1B,MAClBI,SAAUmC,KAAKb,MAAMtB,WACxBmC,KAAK3D,MAAMsD,eAAiBrD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAAf,gDArEzB4D,aAwFLC,cAZS,SAAApB,GAAK,MAAK,CAC9BvC,gBAAiBuC,EAAMqB,MAAM5D,gBAC7B+C,cAAeR,EAAMqB,MAAMb,gBAGJ,SAAAc,GACvB,MAAO,CACHX,QAAS,SAACrC,EAAOI,GAAR,OAAqB4C,EH1FjB,SAAChD,EAAOI,GACzB,MAAc,kBAAVJ,GAA0C,YAAbI,EACtBE,IAEAC,IGsFgC0C,CAAqBjD,EAAOI,KACnE+B,qBAAsB,kBAAMa,EHvEK,CACrCrD,KCfiC,6BEyFtBmD,CAA6CrB,GCpF7CyB,mLARP,OACIrE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qCACXJ,EAAAC,EAAAC,cAACoE,EAAD,cAJKN,oBCcNO,EAfA,SAACxE,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,UAAKH,EAAMyE,SAEfxE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACXJ,EAAAC,EAAAC,cAAA,UACIE,UAAU,yBACVqE,QAAS,kBAAM1E,EAAM2E,aAFzB,sCCMDC,EAZD,SAAC5E,GACX,OACIC,EAAAC,EAAAC,cAAA,QAAME,UAAU,SACZJ,EAAAC,EAAAC,cAAA,OACI0E,IAAKC,IACLJ,QAAS,kBAAM1E,EAAM+E,qBAAqB/E,EAAMgF,KAAK/C,QAAS,UAC9DgD,IAAI,kBACRhF,EAAAC,EAAAC,cAAA,QAAME,UAAU,oBAAoBL,EAAMgF,KAAK1C,SAASG,yBCKrDyC,EAZE,SAAClF,GACd,OACIC,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBACZJ,EAAAC,EAAAC,cAAA,OACI0E,IAAKM,IACLT,QAAS,kBAAM1E,EAAM+E,qBAAqB/E,EAAMgF,KAAK/C,QAAS,aAC9DgD,IAAI,kBACRhF,EAAAC,EAAAC,cAAA,QAAME,UAAU,oBAAoBL,EAAMgF,KAAK1C,SAASI,WCUrD0C,EAlBC,SAACpF,GACb,IAAMqF,EACFrF,EAAMgF,KAAK1C,SAASK,MAAM1D,IAAI,SAAC0D,EAAO2C,GAClC,OACIrF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAAqBkF,IAAKD,GACrCrF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAasC,EAAM3B,MAAYf,EAAAC,EAAAC,cAAA,WAC/CF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWsC,EAAMC,cAKhD,OACI3C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mCACVgF,ICoBEG,EAhCD,SAACxF,GAAU,IAAAyF,EACSC,oBAAS,GADlBC,EAAA9F,OAAA+F,EAAA,EAAA/F,CAAA4F,EAAA,GAChBI,EADgBF,EAAA,GACPG,EADOH,EAAA,GAErB,OACI1F,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,QACIE,UAAU,aACV0F,MAAO,CAAEC,SAAU,OAAQC,OAAQ,WACnCvB,QAAS,kBAAMoB,GAAcD,KAC7B5F,EAAAC,EAAAC,cAAA,mBACGF,EAAAC,EAAAC,cAAA,WACNH,EAAMgF,KAAK1C,SAASK,MAAMuD,OAAS,GAAKjG,EAAAC,EAAAC,cAACgG,EAAD,CAASnB,KAAMhF,EAAMgF,OAE1Da,GACA5F,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACXJ,EAAAC,EAAAC,cAAA,YACIkB,YAAY,gBACZhB,UAAU,eACV0F,MAAO,CAAEK,OAAQ,QACjBnF,SAAU,SAACN,GAAD,OAAWX,EAAMqG,aAAa1F,IACxCQ,MAAOnB,EAAM4C,YACjB3C,EAAAC,EAAAC,cAAA,UACIE,UAAU,8BACVqE,QAAS,kBAAM1E,EAAMsG,aAFzB,iBCCTC,EArBC,SAACvG,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAaL,EAAMgF,KAAK5C,KAAKpB,MAC7Cf,EAAAC,EAAAC,cAAA,QAAME,UAAU,kBAAkBL,EAAMgF,KAAK1C,SAASE,MAAYvC,EAAAC,EAAAC,cAAA,WAClEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWL,EAAMgF,KAAK1C,SAASC,MAC9CtC,EAAAC,EAAAC,cAACqG,EAAD,CACIxB,KAAMhF,EAAMgF,KACZD,qBAAsB,SAAC0B,EAAQC,GAAT,OAAuB1G,EAAM+E,qBAAqB0B,EAAQC,MACpFzG,EAAAC,EAAAC,cAACwG,EAAD,CACI3B,KAAMhF,EAAMgF,KACZD,qBAAsB,SAAC0B,EAAQC,GAAT,OAAuB1G,EAAM+E,qBAAqB0B,EAAQC,MACpFzG,EAAAC,EAAAC,cAACyG,EAAD,CACI5B,KAAMhF,EAAMgF,KACZqB,aAAc,SAAC1F,GAAD,OAAWX,EAAMqG,aAAa1F,IAC5C2F,SAAU,kBAAMtG,EAAMsG,YACtB1D,UAAW5C,EAAM4C,cCclBiE,EA/BK,SAAC7G,GAEjB,IAAM8G,EACF9G,EAAM+G,aAAa9H,IAAI,SAAA+F,GACnB,OACI/E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAA0BkF,IAAKP,EAAK/C,SAC/ChC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACXJ,EAAAC,EAAAC,cAAA,OACIE,UAAU,QACVwE,IAAKmC,MAAQ,KAAA1G,OAAgB0E,EAAK5C,KAAKC,YACvC4C,IAAI,kBACRhF,EAAAC,EAAAC,cAAC8G,EAAD,CACIjC,KAAMA,EACND,qBAAsB,SAAC0B,EAAQC,GAAT,OAAuB1G,EAAM+E,qBAAqB0B,EAAQC,IAChFL,aAAc,SAAC1F,GAAD,OAAWX,EAAMqG,aAAa1F,IAC5C2F,SAAU,kBAAMtG,EAAMsG,SAAStB,EAAK/C,UACpCW,UAAW5C,EAAM4C,aACnB3C,EAAAC,EAAAC,cAAA,cAMtB,OACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACVyG,ICVEI,EAjBI,SAAClH,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACXJ,EAAAC,EAAAC,cAAA,YACIkB,YAAY,gBACZhB,UAAU,eACV8G,KAAK,IACLpB,MAAO,CAAEK,OAAQ,QACjBnF,SAAU,SAACN,GAAD,OAAWX,EAAMoH,qBAAqBzG,IAChDQ,MAAOnB,EAAMqH,cACjBpH,EAAAC,EAAAC,cAAA,UACIE,UAAU,8BACVqE,QAAS1E,EAAMsH,YAFnB,iBCyBGC,SAlCI,SAACvH,GAEhB,OADAwH,QAAQC,IAAI,wBAAyBzH,EAAM0H,YAEvCzH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACVJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYsH,aAAW,WAAWjD,QAAS,kBAAM1E,EAAM4H,yBACrE3H,EAAAC,EAAAC,cAAA,QAAM0H,cAAY,QAAlB,QACA5H,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,cAIJL,EAAM0H,WAAWxB,OAAS,GAAKlG,EAAM0H,WAAWzI,IAAI,SAAA6I,GAChD,OACI7H,EAAAC,EAAAC,cAAA,MACIE,UAAYL,EAAM+H,MAAQ,IAAOD,EAAS,mBAAqB,YAC/DvC,IAAKuC,EACLpD,QAAS,kBAAM1E,EAAMgI,aAAaF,KAClC7H,EAAAC,EAAAC,cAAA,UAAQE,UAAU,aAAayH,MAK/C7H,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYsH,aAAW,OAAOjD,QAAS,kBAAM1E,EAAMiI,qBACjEhI,EAAAC,EAAAC,cAAA,QAAM0H,cAAY,QAAlB,QACA5H,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,cCoIT6H,EA1JF,SAAClI,GAAU,IAAAyF,EAEkBC,mBAAS,IAF3BC,EAAA9F,OAAA+F,EAAA,EAAA/F,CAAA4F,EAAA,GAEfsB,EAFepB,EAAA,GAEDwC,EAFCxC,EAAA,GAAAyC,EAGgB1C,mBAAS,IAHzB2C,EAAAxI,OAAA+F,EAAA,EAAA/F,CAAAuI,EAAA,GAGff,EAHegB,EAAA,GAGFC,EAHED,EAAA,GAAAE,EAIwB7C,mBAAS,IAJjC8C,EAAA3I,OAAA+F,EAAA,EAAA/F,CAAA0I,EAAA,GAIfE,EAJeD,EAAA,GAIEE,EAJFF,EAAA,GAAAG,EAKIjD,mBAAS,GALbkD,EAAA/I,OAAA+F,EAAA,EAAA/F,CAAA8I,EAAA,GAKfZ,EALea,EAAA,GAKRC,EALQD,EAAA,GAAAE,EAMEpD,mBAAS,GANXqD,EAAAlJ,OAAA+F,EAAA,EAAA/F,CAAAiJ,EAAA,GAMfE,EANeD,EAAA,GAMTE,EANSF,EAAA,GAAAG,EAOcxD,mBAAS,GAPvByD,EAAAtJ,OAAA+F,EAAA,EAAA/F,CAAAqJ,EAAA,GAOfxB,EAPeyB,EAAA,GAOHC,EAPGD,EAAA,GAAAE,EAQY3D,mBAAS,IARrB4D,EAAAzJ,OAAA+F,EAAA,EAAA/F,CAAAwJ,EAAA,GAQfzG,EARe0G,EAAA,GAQJC,EARID,EAAA,GAUpBE,oBAAU,WACN,GAAIxH,EAAKkE,OAAS,EAAG,CAGjB,IAFA,IAAMuD,EAAoBzH,EAAKkE,OAAS,EAClCwD,EAAkB,GACfC,EAAI,EAAGA,GAAKF,EAAmBE,IACpCD,EAAgBE,KAAKD,GAEzBjB,EAAmBgB,GAEvBvB,EAAgBnG,IACjB,IA2GH,OACI/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACXJ,EAAAC,EAAAC,cAAC0J,EAAD,CAAQpF,OAAO,WAAWE,SAAU,kBAAM3E,EAAM2E,cAAc1E,EAAAC,EAAAC,cAAA,WAC9DF,EAAAC,EAAAC,cAAC2J,EAAD,CACI/C,aAAcA,EAAagD,MAAMf,EAAMjB,GACvChD,qBAAsB,SAAC0B,EAAQC,GAAT,OA9GL,SAACD,EAAQC,GAClC,IAAIsD,EAAsBC,KAAKC,MAAMD,KAAKE,UAAUpD,IAChDqD,EAAeJ,EAAoBK,UAAU,SAAArF,GAAI,OAAIA,EAAK/C,UAAYwE,IACtE2D,GAAgB,IACF,UAAd1D,EAAwBsD,EAAoBI,GAAc9H,SAASG,MAAQ,EAAIuH,EAAoBI,GAAc9H,SAASI,SAAW,GAEzIyF,EAAgB6B,GAwGqCjF,CAAqB0B,EAAQC,IAC1EL,aAAc,SAAC1F,GAAD,OAjCL,SAACA,GAClB4I,EAAa5I,EAAMuC,OAAO/B,OAgCOkF,CAAa1F,IACtC2F,SAAU,SAACG,GAAD,OA9BL,SAACA,GACd,GAAIzG,EAAMO,gBACN,GAAyB,KAArBqC,EAAUf,OAAe,CACzB,IAAImI,EAAsBC,KAAKC,MAAMD,KAAKE,UAAUpD,IAC9CuD,EAAYN,EAAoBK,UAAU,SAAArF,GAAI,OAAIA,EAAK/C,UAAYwE,IACzE,GAAI6D,GAAa,EAAG,CAChB,IAAM3H,EAAQ,CACV3B,KAAM,YACN4B,UAAWA,GAEfoH,EAAoBM,GAAWhI,SAASK,MAAMiH,KAAKjH,GAEvDwF,EAAgB6B,GAChBT,EAAa,SAEbgB,MAAM,wCAGVA,MAAM,2BACNvK,EAAM2E,WAWoB2B,CAASG,IAC/B7D,UAAWA,IAEXmE,EAAab,OAAS,GACtBjG,EAAAC,EAAAC,cAACqK,EAAD,CACI9C,WAAYe,EACZT,aAAc,SAACF,GAAD,OAlET,SAACA,GAClBmB,EAAkB,EAATnB,EAAc,GACvBe,EAAkB,EAATf,GACTsB,EAActB,GA+DwBE,CAAaF,IACvCC,MAAOA,EACPH,qBAAsB,kBA9DT,WACzB,IAAIE,EAASJ,EACTA,EAAa,IACbI,EAASJ,EAAa,GAE1BuB,EAAkB,EAATnB,EAAc,GACvBe,EAAkB,EAATf,GACTsB,EAActB,GAuD0BF,IAC5BK,iBAAkB,kBArDT,WACrB,IAAIH,EAASJ,EACTA,EAAa,IACbI,EAASJ,EAAa,GAE1BuB,EAAkB,EAATnB,EAAc,GACvBe,EAAkB,EAATf,GACTsB,EAActB,GA8CsBG,MAGhChI,EAAAC,EAAAC,cAACsK,EAAD,CACIpD,YAAaA,EACbD,qBAAsB,SAACzG,GAAD,OArHL,SAACA,GAC1B2H,EAAe3H,EAAMuC,OAAO/B,OAoHaiG,CAAqBzG,IACtD2G,WAlHO,WACf,GAAItH,EAAMO,gBACN,GAA2B,KAAvB8G,EAAYxF,OAAe,CAC3B,IAAImI,EAAsBC,KAAKC,MAAMD,KAAKE,UAAUpD,IAC9C2D,EAAW,CACbzI,QAASC,KAAKC,OAAO,IACrBC,KAAM,CACFpB,KAAM,YACNqB,UAAW,iBAEfC,SAAU,CACNC,KAAM8E,EACN7E,KAAM,eACNC,KAAM,EACNC,QAAS,EACTC,MAAO,KAIf,GADAqH,EAAoBJ,KAAKc,GACrBV,EAAoB9D,OAAS,GAAK8D,EAAoB9D,OAAS,IAAM,EAAG,CAGxE,IAFA,IAAIyE,EAAyB,GACvBlB,EAAoBO,EAAoB9D,OAAS,EAC9CyD,EAAI,EAAGA,GAAKF,EAAoB,EAAGE,IACxCgB,EAAuBf,KAAKD,GAEhCjB,EAAmBiC,GAEvBxC,EAAgB6B,GAChB1B,EAAe,SAEfiC,MAAM,yCAGVA,MAAM,8BACNvK,EAAM2E,gBCrEZiG,6MAEF9H,MAAQ,CACJ+H,gBAAiB,wFAGFnH,GACVC,KAAK3D,MAAMO,iBACZoD,KAAKP,SAAS,CACVyH,gBAAiB5K,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUC,GAAG,8CAKjC,IAAAC,EAAAH,KACL,OACI1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACVsD,KAAKb,MAAM+H,gBACZ5K,EAAAC,EAAAC,cAAC2K,EAAD,CAAMvK,gBAAiBoD,KAAK3D,MAAMO,gBAAiBoE,SAAU,kBAAMb,EAAK9D,MAAM2E,sBAlB3EV,aAkCJC,cAVS,SAAApB,GAAK,MAAK,CAC9BvC,gBAAiBuC,EAAMqB,MAAM5D,kBAGN,SAAA6D,GACvB,MAAO,CACHO,SAAU,kBAAMP,EfnBK,CACzBrD,KCZkB,cckCPmD,CAA6C0G,GChCtDG,0LAEJ,OACC9K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACdJ,EAAAC,EAAAC,cAACyD,EAAA,EAAD,KACC3D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAOoH,KAAK,QAAQC,OAAK,EAACC,UAAWN,IACrC3K,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAOoH,KAAK,SAASC,OAAK,EAACC,UAAW5G,IACtCrE,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUC,GAAG,mBAPAI,cAkBHC,cAJS,SAAApB,GAAK,MAAK,CACjCvC,gBAAiBuC,EAAMqB,MAAM5D,kBAGU,KAAzB2D,CAA+B6G,GCf1BI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,6ECbOC,EAAe,SAACC,EAAWC,GACpC,OAAO7L,OAAA8L,EAAA,EAAA9L,CAAA,GACA4L,EACAC,ICDLE,EAAe,CACjBtI,cAAe,KACf/C,gBAAiBsL,aAAaC,QAAQ,SA8C3B3H,EAfD,WAAkC,IAAjCrB,EAAiCiJ,UAAA7F,OAAA,QAAA8F,IAAAD,UAAA,GAAAA,UAAA,GAAzBH,EAAcK,EAAWF,UAAA7F,OAAA,EAAA6F,UAAA,QAAAC,EAC5C,OAAQC,EAAOlL,MACX,IlBrCqB,gBkBsCjB,OA/BS,SAAC+B,EAAOmJ,GAEzB,OADAJ,aAAaK,QAAQ,QAAQ,GACtBV,EAAa1I,EAAO,CACvBvC,iBAAiB,IA4BNmB,CAAaoB,GACxB,IlBtCkB,akBuCd,OA1BM,SAACA,EAAOmJ,GACtB,OAAOT,EAAa1I,EAAO,CACvBQ,eAAe,IAwBJ3B,CAAUmB,GACrB,IlBvCc,SkBwCV,OAtBG,SAACA,EAAOmJ,GAEnB,OADAJ,aAAaM,WAAW,QACjBX,EAAa1I,EAAO,CACvBvC,iBAAiB,IAmBN6L,CAAOtJ,GAClB,IlBxC6B,wBkByCzB,OAjBe,SAACA,EAAOmJ,GAE/B,OADAJ,aAAaM,WAAW,QACjBX,EAAa1I,EAAO,CACvBQ,cAAe,OAcJ+I,CAAmBvJ,GAC9B,QACI,OAAOA,ICrCbwJ,EAAcC,YAAgB,CACnCpI,MAAOA,IAMFqI,EAAmBpB,OAAOqB,sCAAwCC,IAKlEC,EAAQC,YAAYN,EAAaE,KAMjCK,EACL5M,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAUH,MAAOA,GAChB1M,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,KACC9M,EAAAC,EAAAC,cAAC6M,EAAD,QAKHC,IAASC,OAAOL,EAAKM,SAASC,eAAe,SHyFvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1f44f3bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/like.9d0356f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/dislike.a0eb0044.svg\";","var map = {\n\t\"./anonymous.jpg\": 51,\n\t\"./dislike.svg\": 24,\n\t\"./like.svg\": 23\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 50;","module.exports = __webpack_public_path__ + \"static/media/anonymous.27ebeb2f.jpg\";","import React from 'react';\n\nconst Heading = (props) => {\n    return (\n        <React.Fragment>\n            <h2 className={`heading ${props.isAuthenticated ? 'col-md-10' : 'w-100'} text-center`}>\n                {props.heading}\n            </h2>\n        </React.Fragment>\n    );\n};\n\nexport default Heading;\n","import React from 'react';\nimport './LoginForm.css';\n\nconst LoginForm = (props) => {\n    return (\n        <div className=\"login-form m-2\">\n            <form className=\"mt-5 text-right\"\n                onSubmit={(event) => props.loginSubmitHandler(event)}\n                onBlur={(event) => props.formValidate(event)}>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    onChange={(event) => props.inputChangeHandler(event)}\n                    value={props.email}\n                    placeholder=\"Email*\"\n                    autoComplete=\"off\" />\n                {!props.isEmailValid && <p className=\"error text-danger text-left pl-1\">Email is required</p>}\n                <input\n                    type=\"password\"\n                    className=\"form-control mt-3\"\n                    onChange={(event) => props.inputChangeHandler(event)}\n                    value={props.password}\n                    name=\"password\"\n                    placeholder=\"Password*\" />\n                {!props.isPasswordValid && <p className=\"error text-danger text-left pl-1\">Password is required</p>}\n                <button type=\"sumit\" className=\"btn btn-md btn-primary mt-4 mb-4\">Login</button>\n            </form>\n        </div>\n    );\n};\n\nexport default LoginForm;\n","import * as actionTypes from './actionTypes';\n\nexport const login = (email, password) => {\n    if (email === 'ram@gmail.com' && password === 'Ram@123') {\n        return loginSuccess();\n    } else {\n        return loginFail();\n    }\n};\n\nexport const loginSuccess = () => ({\n    type: actionTypes.LOGIN_SUCCESS\n});\n\nexport const loginFail = () => ({\n    type: actionTypes.LOGIN_FAIL\n});\n\nexport const logout = () => ({\n    type: actionTypes.LOGOUT\n});\n\nexport const resetLoginFailFlag = () => ({\n    type: actionTypes.RESET_LOGIN_FAIL_FLAG\n})\n","/*\n * Define which type of action to be dispatched to reducer\n */\n\n// For Auth\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const RESET_LOGIN_FAIL_FLAG = 'RESET_LOGIN_FAIL_FLAG';\n","\nexport const validateEmail = (email) => {\n    let isEmailValid = false;\n    let regex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    if (email.trim() !== '' && regex.test(email)) {\n        isEmailValid = true;\n    }\n    return isEmailValid;\n};\n\nexport const validatePassword = (password) => {\n    let isPasswordValid = false;\n    let regex = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9\\S]+)$/;\n    if (password.trim() !== '' && regex.test(password)) {\n        isPasswordValid = true;\n    }\n    return isPasswordValid;\n};\n\nexport const data = [\n    {\n        user_id: Math.random(10),\n        user: {\n            name: 'Ram krishan',\n            image_url: 'anonymous.jpg'\n        },\n        comments: {\n            text: 'How artistic',\n            time: 'Today at 1pm',\n            like: 0,\n            dislike: 0,\n            reply: [{\n                name: 'Mark',\n                replyText: 'Its nice to be there !'\n            },\n            {\n                name: 'Peter',\n                replyText: 'Its Good'\n            }]\n        }\n    },\n    {\n        user_id: Math.random(10),\n        user: {\n            name: 'Ram krishan',\n            image_url: 'anonymous.jpg'\n        },\n        comments: {\n            text: 'How artistic',\n            time: 'Today at 1pm',\n            like: 0,\n            dislike: 0,\n            reply: [{\n                name: 'Mark',\n                replyText: 'Its nice'\n            }]\n        }\n    },\n    {\n        user_id: Math.random(10),\n        user: {\n            name: 'Ram krishan',\n            image_url: 'anonymous.jpg'\n        },\n        comments: {\n            text: 'How artistic',\n            time: 'Today at 1pm',\n            like: 0,\n            dislike: 0,\n            reply: []\n        }\n    }\n];\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Heading from '../../components/Heading/Heading';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport * as actionCreators from '../../store/actions';\nimport './Login.css';\nimport { validateEmail, validatePassword } from '../../Helpers/Helpers';\n\nclass Login extends Component {\n\n    state = {\n        email: '',\n        password: '',\n        isEmailValid: true,\n        isPasswordValid: true,\n        redirectToHome: null\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.isAuthenticated) {\n            this.setState({\n                email: '',\n                password: '',\n                redirectToHome: <Redirect to=\"/home\" />\n            });\n        }\n    };\n\n    inputChangeHandler = (event) => {\n        const element = event.target.name;\n        this.setState({\n            [event.target.name]: event.target.value,\n            isEmailValid: element === 'email' ? validateEmail(event.target.value) : this.state.isEmailValid,\n            isPasswordValid: element === 'password' ? validatePassword(event.target.value) : this.state.isPasswordValid\n        });\n\n        this.props.isLoginFailed && this.props.onResetLoginFailFlag();\n    };\n\n    formValidate = (event) => {\n        const element = event.target.name;\n        this.setState({\n            isEmailValid: element === 'email' ? validateEmail(event.target.value) : this.state.isEmailValid,\n            isPasswordValid: element === 'password' ? validatePassword(event.target.value) : this.state.isPasswordValid\n        });\n    };\n\n    loginSubmitHandler = (event) => {\n        event.preventDefault();\n        let email = this.state.email;\n        let password = this.state.password;\n\n        if (validateEmail(this.state.email) && validatePassword(this.state.password)) {\n            this.props.onLogin(this.state.email, this.state.password);\n        }\n\n        this.setState({\n            email,\n            password,\n            isEmailValid: validateEmail(this.state.email),\n            isPasswordValid: validatePassword(this.state.password)\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"login-wrapper col-md-4 offset-2 mt-5\">\n                {this.state.redirectToHome}\n                <Heading heading=\"Login\" />\n                <LoginForm\n                    inputChangeHandler={(event) => this.inputChangeHandler(event)}\n                    loginSubmitHandler={(event) => this.loginSubmitHandler(event)}\n                    formValidate={(event) => this.formValidate(event)}\n                    isEmailValid={this.state.isEmailValid}\n                    isPasswordValid={this.state.isPasswordValid}\n                    email={this.state.email}\n                    password={this.state.password} />\n                {this.props.isLoginFailed && <div className=\"alert alert-danger\">Username or Password is incorrect !!</div>}\n            </div>\n        );\n    };\n};\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.login.isAuthenticated,\n    isLoginFailed: state.login.isLoginFailed\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogin: (email, password) => dispatch(actionCreators.login(email, password)),\n        onResetLoginFailFlag: () => dispatch(actionCreators.resetLoginFailFlag())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport Login from '../Login/Login';\n\nclass Layout extends Component {\n    render() {\n        return (\n            <div className=\"layout row col-md-9 offset-3 mt-5\">\n                <Login />\n            </div>\n        );\n    };\n};\n\nexport default Layout;\n","import React from 'react';\n\nconst Header = (props) => {\n    return (\n        <div className=\"header row mt-2\">\n            <div className=\"col-md-3 text\">\n                <h2>{props.header}</h2>\n            </div>\n            <div className=\"col-md-8 text-right mt-2\">\n                <button\n                    className=\"btn btn-sm btn-primary\"\n                    onClick={() => props.onLogout()}>Logout</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport likeIcon from '../../../../images/like.svg';\n\nconst Likes = (props) => {\n    return (\n        <span className=\"likes\">\n            <img\n                src={likeIcon}\n                onClick={() => props.likeOrDislikeComment(props.item.user_id, 'likes')}\n                alt=\"Not available\" />\n            <span className=\"likes-count ml-1\">{props.item.comments.like}</span>\n        </span>\n    );\n};\n\nexport default Likes;\n","import React from 'react';\nimport dislikeIcon from '../../../../images/dislike.svg';\n\nconst Dislikes = (props) => {\n    return (\n        <span className=\"dislikes ml-3\">\n            <img\n                src={dislikeIcon}\n                onClick={() => props.likeOrDislikeComment(props.item.user_id, 'dislikes')}\n                alt=\"Not available\" />\n            <span className=\"likes-count ml-1\">{props.item.comments.dislike}</span>\n        </span>\n    );\n};\n\nexport default Dislikes;\n","import React from 'react';\n\nconst Replies = (props) => {\n    const replies = (\n        props.item.comments.reply.map((reply, index) => {\n            return (\n                <div className=\"reply-details mt-1\" key={index}>\n                    <span className=\"user-name\">{reply.name}</span><br />\n                    <div className=\"comment\">{reply.replyText}</div>\n                </div>\n            );\n        })\n    )\n    return (\n        <div className=\"replies col-md-10 offset-1 mt-2\">\n            {replies}\n        </div>\n    );\n};\n\nexport default Replies;\n","import React, { useState } from 'react';\nimport Replies from './Replies/Replies';\n\nconst Reply = (props) => {\n    let [isReply, setReplyFlag] = useState(false);\n    return (\n        <React.Fragment>\n            <span\n                className=\"reply ml-2\"\n                style={{ fontSize: '13px', cursor: 'pointer' }}\n                onClick={() => setReplyFlag(!isReply)}>\n                <b>Reply</b>\n            </span><br />\n            {props.item.comments.reply.length > 0 && <Replies item={props.item} />}\n            {\n                isReply &&\n                <React.Fragment>\n                    <br />\n                    <div className=\"col-md-10 offset-1 mt-2\">\n                        <textarea\n                            placeholder=\"Add text here\"\n                            className=\"form-control\"\n                            style={{ resize: 'none' }}\n                            onChange={(event) => props.replyHandler(event)}\n                            value={props.replyText}></textarea>\n                        <button\n                            className=\"btn btn-sm btn-primary mt-2\"\n                            onClick={() => props.addReply()}>Add Reply</button>\n                    </div>\n                </React.Fragment>\n            }\n        </React.Fragment>\n    );\n};\n\nexport default Reply;\n","import React from 'react';\nimport Likes from './Likes/Likes';\nimport Dislikes from './Dislikes/Dislikes';\nimport Reply from './Reply/Reply';\n\nconst Comment = (props) => {\n    return (\n        <div className=\"comment w-75 ml-3\">\n            <span className=\"user-name\">{props.item.user.name}</span>\n            <span className=\"post-time ml-3\">{props.item.comments.time}</span><br />\n            <div className=\"comment\">{props.item.comments.text}</div>\n            <Likes\n                item={props.item}\n                likeOrDislikeComment={(userId, parameter) => props.likeOrDislikeComment(userId, parameter)} />\n            <Dislikes\n                item={props.item}\n                likeOrDislikeComment={(userId, parameter) => props.likeOrDislikeComment(userId, parameter)} />\n            <Reply\n                item={props.item}\n                replyHandler={(event) => props.replyHandler(event)}\n                addReply={() => props.addReply()}\n                replyText={props.replyText} />\n        </div>\n    );\n};\n\nexport default Comment;\n","import React from 'react';\nimport './UserComment.css';\nimport Comment from './Comment/Comment';\n\nconst UserComment = (props) => {\n\n    const userComment = (\n        props.commentsData.map(item => {\n            return (\n                <div className=\"comment-details-wrapper\" key={item.user_id}>\n                    <div className=\"comment-details w-100 row\">\n                        <img\n                            className=\"image\"\n                            src={require(`../../images/${item.user.image_url}`)}\n                            alt=\"Not available\" />\n                        <Comment\n                            item={item}\n                            likeOrDislikeComment={(userId, parameter) => props.likeOrDislikeComment(userId, parameter)}\n                            replyHandler={(event) => props.replyHandler(event)}\n                            addReply={() => props.addReply(item.user_id)}\n                            replyText={props.replyText} />\n                    </div><br />\n                </div>\n            );\n        })\n    );\n\n    return (\n        <div className=\"user-comment col-md-12\" >\n            {userComment}\n        </div>\n    );\n}\n\n\nexport default UserComment;\n","import React from 'react';\n\nconst AddComment = (props) => {\n    return (\n        <div className=\"add-comment col-md-12\">\n            <textarea\n                placeholder=\"Add text here\"\n                className=\"form-control\"\n                rows=\"8\"\n                style={{ resize: 'none' }}\n                onChange={(event) => props.commentChangeHandler(event)}\n                value={props.commentText}></textarea>\n            <button\n                className=\"btn btn-md btn-primary mt-2\"\n                onClick={props.addComment}>Add Comment</button>\n        </div>\n    );\n};\n\nexport default AddComment;\n","import React from 'react';\nimport './Pagination.css';\n\nconst Pagination = (props) => {\n    console.log('===props.pageNumber==', props.pageNumber)\n    return (\n        <div className=\"pagination-wrapper\">\n            <ul className=\"pagination\">\n                <li className=\"page-item\">\n                    <button className=\"page-link\" aria-label=\"Previous\" onClick={() => props.paginatePreviousData()}>\n                        <span aria-hidden=\"true\">&laquo;</span>\n                        <span className=\"sr-only\">Previous</span>\n                    </button>\n                </li>\n                {\n                    props.pageNumber.length > 0 && props.pageNumber.map(number => {\n                        return (\n                            <li\n                                className={(props.limit / 5) === number ? \"page-item active\" : \"page-item\"}\n                                key={number}\n                                onClick={() => props.paginateData(number)}>\n                                <button className=\"page-link\">{number}</button>\n                            </li>\n                        );\n                    })\n                }\n                <li className=\"page-item\">\n                    <button className=\"page-link\" aria-label=\"Next\" onClick={() => props.paginateNextData()}>\n                        <span aria-hidden=\"true\">&raquo;</span>\n                        <span className=\"sr-only\">Next</span>\n                    </button>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Pagination;","import React, { useState, useEffect } from 'react';\nimport { data } from '../../Helpers/Helpers';\nimport Header from '../Header/Header';\nimport UserComment from '../UserComment/UserComment';\nimport AddComment from '../AddComment/AddComment';\nimport Pagination from '../Pagination/Pagination';\n\nconst Body = (props) => {\n\n    let [commentsData, setCommentsData] = useState([]);\n    let [commentText, setCommentText] = useState('');\n    let [pageNumberArray, setPageNumberArray] = useState([]);\n    let [limit, setLimit] = useState(5);\n    let [skip, setSkip] = useState(0)\n    let [pageNumber, setPageNumber] = useState(1);\n    let [replyText, setReplyText] = useState('');\n\n    useEffect(() => {\n        if (data.length > 5) {\n            const commentDataLength = data.length / 5;\n            const paginationArray = [];\n            for (let i = 1; i <= commentDataLength; i++) {\n                paginationArray.push(i)\n            }\n            setPageNumberArray(paginationArray);\n        }\n        setCommentsData(data);\n    }, []);\n\n    const likeOrDislikeComment = (userId, parameter) => {\n        let updatedCommentsData = JSON.parse(JSON.stringify(commentsData));\n        let commentIndex = updatedCommentsData.findIndex(item => item.user_id === userId);\n        if (commentIndex > -1) {\n            parameter === 'likes' ? updatedCommentsData[commentIndex].comments.like += 1 : updatedCommentsData[commentIndex].comments.dislike += 1;\n        }\n        setCommentsData(updatedCommentsData);\n    };\n\n    const commentChangeHandler = (event) => {\n        setCommentText(event.target.value);\n    };\n\n    const addComment = () => {\n        if (props.isAuthenticated) {\n            if (commentText.trim() !== '') {\n                let updatedCommentsData = JSON.parse(JSON.stringify(commentsData));\n                const userData = {\n                    user_id: Math.random(10),\n                    user: {\n                        name: 'Anonymous',\n                        image_url: 'anonymous.jpg',\n                    },\n                    comments: {\n                        text: commentText,\n                        time: 'Today at 1pm',\n                        like: 0,\n                        dislike: 0,\n                        reply: []\n                    }\n                }\n                updatedCommentsData.push(userData);\n                if (updatedCommentsData.length > 5 && updatedCommentsData.length % 5 === 1) {\n                    let updatedPageNumberArray = [];\n                    const commentDataLength = updatedCommentsData.length / 5;\n                    for (let i = 1; i <= commentDataLength + 1; i++) {\n                        updatedPageNumberArray.push(i)\n                    }\n                    setPageNumberArray(updatedPageNumberArray);\n                }\n                setCommentsData(updatedCommentsData);\n                setCommentText('');\n            } else {\n                alert('Text is not allowed to be empty!')\n            }\n        } else {\n            alert('Please login to add post !')\n            props.onLogout();\n        }\n\n    };\n\n    const paginateData = (number) => {\n        setSkip((number * 5) - 5);\n        setLimit(number * 5);\n        setPageNumber(number);\n    };\n\n    const paginatePreviousData = () => {\n        let number = pageNumber;\n        if (pageNumber > 1) {\n            number = pageNumber - 1;\n        }\n        setSkip((number * 5) - 5);\n        setLimit(number * 5);\n        setPageNumber(number);\n    };\n\n    const paginateNextData = () => {\n        let number = pageNumber;\n        if (pageNumber < 5) {\n            number = pageNumber + 1;\n        }\n        setSkip((number * 5) - 5);\n        setLimit(number * 5);\n        setPageNumber(number);\n    };\n\n    const replyHandler = (event) => {\n        setReplyText(event.target.value);\n    };\n\n    const addReply = (userId) => {\n        if (props.isAuthenticated) {\n            if (replyText.trim() !== '') {\n                let updatedCommentsData = JSON.parse(JSON.stringify(commentsData));\n                const userIndex = updatedCommentsData.findIndex(item => item.user_id === userId);\n                if (userIndex > -1) {\n                    const reply = {\n                        name: 'Anonymous',\n                        replyText: replyText\n                    }\n                    updatedCommentsData[userIndex].comments.reply.push(reply);\n                }\n                setCommentsData(updatedCommentsData);\n                setReplyText('');\n            } else {\n                alert('Text is not allowed to be empty');\n            }\n        } else {\n            alert('Please login to reply !')\n            props.onLogout();\n        }\n    }\n\n    return (\n        <div className=\"layout col-md-8 offset-2\">\n            <Header header=\"Comments\" onLogout={() => props.onLogout()} /><hr />\n            <UserComment\n                commentsData={commentsData.slice(skip, limit)}\n                likeOrDislikeComment={(userId, parameter) => likeOrDislikeComment(userId, parameter)}\n                replyHandler={(event) => replyHandler(event)}\n                addReply={(userId) => addReply(userId)}\n                replyText={replyText} />\n            {\n                commentsData.length > 5 &&\n                <Pagination\n                    pageNumber={pageNumberArray}\n                    paginateData={(number) => paginateData(number)}\n                    limit={limit}\n                    paginatePreviousData={() => paginatePreviousData()}\n                    paginateNextData={() => paginateNextData()}\n                />\n            }\n            <AddComment\n                commentText={commentText}\n                commentChangeHandler={(event) => commentChangeHandler(event)}\n                addComment={addComment} />\n        </div>\n    );\n};\n\nexport default Body;\n","\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Body from '../../components/Body/Body';\nimport * as actionCreators from '../../store/actions';\n\nclass Home extends Component {\n\n    state = {\n        redirectToLogin: null\n    };\n\n    componentDidUpdate(prevProps) {\n        if (!this.props.isAuthenticated) {\n            this.setState({\n                redirectToLogin: <Redirect to=\"/login\" />\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"home col-md-10 offset-1\" >\n                {this.state.redirectToLogin}\n                <Body isAuthenticated={this.props.isAuthenticated} onLogout={() => this.props.onLogout()} />\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.login.isAuthenticated\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actionCreators.logout())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Layout from './containers/Layout/Layout';\nimport Home from './containers/Home/Home';\n// import { Redirect } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/home' exact component={Home} />\n\t\t\t\t\t<Route path=\"/login\" exact component={Layout} />\n\t\t\t\t\t<Redirect to=\"/home\" />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tisAuthenticated: state.login.isAuthenticated\n});\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\n * This is the basic function vastly used in in reducers to update or concatinate\n * their old object with new properties\n */\n\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n","/*\n * This file contains store (accessible to all components) which get manipulated based on dispatched actions for Authentication\n */\n\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    isLoginFailed: null,\n    isAuthenticated: localStorage.getItem('auth')\n};\n\nconst loginSuccess = (state, action) => {\n    localStorage.setItem('auth', true);\n    return updateObject(state, {\n        isAuthenticated: true\n    });\n};\n\nconst loginFail = (state, action) => {\n    return updateObject(state, {\n        isLoginFailed: true\n    });\n};\n\nconst logout = (state, action) => {\n    localStorage.removeItem('auth');\n    return updateObject(state, {\n        isAuthenticated: false\n    });\n};\n\nconst resetLoginFailFlag = (state, action) => {\n    localStorage.removeItem('auth');\n    return updateObject(state, {\n        isLoginFailed: null\n    });\n};\n\n\nconst login = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_SUCCESS:\n            return loginSuccess(state, action);\n        case actionTypes.LOGIN_FAIL:\n            return loginFail(state, action);\n        case actionTypes.LOGOUT:\n            return logout(state);\n        case actionTypes.RESET_LOGIN_FAIL_FLAG:\n            return resetLoginFailFlag(state);\n        default:\n            return state;\n    }\n};\n\nexport default login;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/js/bootstrap.min.js';\nimport login from './store/reducer/login';\n/*\n * combining all the reducers\n */\nconst rootReducer = combineReducers({\n\tlogin: login\n});\n\n/*\n * composeEnhancers is for chrome dev toolbar which helps us see store management of redux\n */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n/*\n * Creating Store and applying middleware \n */\nconst store = createStore(rootReducer, composeEnhancers());\n\n/*\n * Wrapping the main app with BrowserRouter (provides routing and helps us navigate through project)\n * Provider is a part of Redux which is needed in order to get access to store throughout our project \n */\nconst app = (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}